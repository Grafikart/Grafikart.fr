resources:
  App\Domain\Forum\Entity\Report:
    shortName: 'ForumReport'
    operations:
      ApiPlatform\Metadata\Post:
        uriTemplate: 'forum/reports'
        security: is_granted("forumReport")
        denormalizationContext:
          groups: [ 'create:report' ]
        normalizationContext:
          groups: [ 'read:report' ]
        openapi_context:
          summary: Cr√©e un nouveau signalement
      ApiPlatform\Metadata\Delete:
        security: is_granted("DELETE_FORUM_REPORT", object)
  App\Domain\Forum\Entity\Topic:
    shortName: 'ForumTopic'
    uriTemplate: 'forum/topics/{id}'
    collectionOperations: [ ]
    operations:
      ApiPlatform\Metadata\Get:
        normalizationContext:
          groups: [ 'read:topic' ]
      ApiPlatform\Metadata\Delete:
        security: is_granted("DELETE_TOPIC", object)

  App\Domain\Forum\Entity\Message:
    uriTemplate: 'forum/messages/{id}'
    shortName: 'ForumMessage'
    collectionOperations: [ ]
    operations:
      ApiPlatform\Metadata\Get:
        normalizationContext:
          groups: [ 'read:message' ]
      ApiPlatform\Metadata\Delete:
        security: is_granted("DELETE_FORUM_MESSAGE", object)
      ApiPlatform\Metadata\Put:
        denormalizationContext:
          groups: [ 'update:message' ]
        normalizationContext:
          groups: [ 'read:message' ]
        security: is_granted("UPDATE_FORUM_MESSAGE", object)

  App\Domain\Notification\Entity\Notification:
    processor: "App\\Http\\Api\\Processor\\NotificationProcessor"
    operations:
      ApiPlatform\Metadata\GetCollection:
        security: is_granted("ROLE_USER")
        paginationClientItemsPerPage: true
        normalizationContext:
          groups: [ 'read:notification' ]
      ApiPlatform\Metadata\Post:
        security: is_granted("CREATE_NOTIFICATION")
        normalizationContext:
          groups: [ 'read:notification' ]
        denormalizationContext:
          groups: [ 'create:notification' ]
