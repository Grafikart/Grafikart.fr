security:
  enable_authenticator_manager: true
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"
    App\Domain\Auth\User:
      algorithm: auto

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Domain\Auth\User
        property: email
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      entry_point: App\Http\Security\AuthenticationEntryPoint
      lazy: true
      user_checker: App\Domain\Auth\Security\UserChecker
      switch_user: { role: CAN_SWITCH_USER, parameter: _ninja }
      custom_authenticator:
        - App\Domain\Auth\Authenticator
        - App\Infrastructure\Social\Authenticator\GithubAuthenticator
        - App\Infrastructure\Social\Authenticator\GoogleAuthenticator
        - App\Infrastructure\Social\Authenticator\FacebookAuthenticator
      logout:
        path: auth_logout
      remember_me:
        secret: "%kernel.secret%"
        lifetime: 604800 # 1 week in seconds
        path: /
        samesite: strict
      access_denied_handler: App\Http\Security\AccessDeniedHandler
      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication
      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    # - { path: ^/profile, roles: ROLE_USER }

when@test:
  security:
    password_hashers:
      # By default, password hashers are resource intensive and take time. This is
      # important to generate secure password hashes. In tests however, secure hashes
      # are not important, waste resources and increase test times. The following
      # reduces the work factor to the lowest possible values.
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon
